#!/usr/bin/python3

import rospy
from simulation_listener import *

if __name__ == "__main__":
    default_time_secs = rospy.get_param('swarm_simulation/delta_time_secs')

    usv_params = rospy.get_param('swarm_simulation/usv_params')
    usvs = []
    for key, params in usv_params.items():
        
        sim_id = params['sim_id']
        # Initial State
        x = params['init_state']['x']
        y = params['init_state']['y']
        heading = params['init_state']['heading']
        speed = params['init_state']['speed']
        init_state = [x, y, speed, np.deg2rad(heading)]
        
        # Constraints
        max_speed = params['constraints']['max_speed']
        max_delta_speed = params['constraints']['max_delta_speed']
        max_delta_heading = params['constraints']['max_delta_heading']
        constraints = [max_speed, max_delta_speed, np.deg2rad(max_delta_heading)]

        # Radius Buffer
        radius_buffer = params['radius_buffer']
        
        usv=BasicUSV(sim_id=sim_id,
                 initial_state=init_state,
                 constraints=constraints,
                 radius_buffer=radius_buffer)
        usvs.append(usv)

    intruder_params = rospy.get_param('swarm_simulation/intruder_params')
    intruders = []

    for sim_id, params in intruder_params.items():

        sim_id = params['sim_id']
        # Initial State
        x = params['init_state']['x']
        y = params['init_state']['y']
        heading = params['init_state']['heading']
        speed = params['init_state']['speed']
        init_state = [x, y, speed, np.deg2rad(heading)]
        
        # Constraints
        max_speed = params['constraints']['max_speed']
        max_delta_speed = params['constraints']['max_delta_speed']
        max_delta_heading = params['constraints']['max_delta_heading']
        constraints = [max_speed, max_delta_speed, np.deg2rad(max_delta_heading)]

        # Radius Buffer
        radius_buffer = params['radius_buffer']
        
        intruder = Intruder(sim_id=sim_id,
                            initial_state=init_state,
                            constraints=constraints,
                            radius_buffer=radius_buffer)
        intruders.append(intruder)

    asset_params = rospy.get_param('swarm_simulation/asset_params/asset')
    asset_sim_id = 100
    asset_radius_buffer=asset_params['radius_buffer']
    x = asset_params['init_state']['x']
    y = asset_params['init_state']['y']
    heading = asset_params['init_state']['heading']
    speed = asset_params['init_state']['speed']
    asset_init_state = [x, y, speed, np.deg2rad(heading)]
    tanker=Tanker(sim_id=asset_sim_id, initial_state=asset_init_state, radius_buffer=asset_radius_buffer)

    sim_node = SimulationNode([*intruders, *usvs, tanker])
    sim_node.sim.begin()

